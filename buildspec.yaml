version: 0.2

phases:
  pre_build:
    commands:
      - echo "Logging in to Amazon ECR..."
      - aws --version
      - REPOSITORY_URI=808985146341.dkr.ecr.eu-north-1.amazonaws.com/test-register1
      - aws ecr get-login-password --region eu-north-1 | docker login --username AWS --password-stdin $REPOSITORY_URI
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
  build:
    commands:
      - echo "Building images..."
      - docker-compose -f docker-compose.yaml build
#      - echo "Pushing images to ECR..."
#      - docker-compose -f docker-compose.yaml push
#      - echo Build started on `date`
#      - echo Building the Docker image...
#      - docker build -t $REPOSITORY_URI:latest .
#      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo "Pushing images to ECR..."
      - docker-compose -f docker-compose.yaml push
      - echo "Push completed successfully!"
#      - echo Pushing the Docker images...
#      - docker push $REPOSITORY_URI:latest
#      - docker push $REPOSITORY_URI:$IMAGE_TAG
#      - echo "Pushing images to ECR..."
#      - docker-compose -f docker-compose.build.yml push
#      - echo Writing image definitions file...
#      - printf '[{"ImageURI":"%s.dkr.ecr.%s.amazonaws.com/charging-service:%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
#      - echo Writing image definitions file...
      # add your container name
#      - DOCKER_CONTAINER_NAME=javatechie-registry
#      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
#      - echo $DOCKER_CONTAINER_NAME
#      - echo printing imagedefinitions.json
#      - cat imagedefinitions.json

artifacts:
  files:
    - 'docker-compose.yaml'
#  secondary-artifacts:
#    docker-images:
#      files:
#        - docker-compose.build.yml

